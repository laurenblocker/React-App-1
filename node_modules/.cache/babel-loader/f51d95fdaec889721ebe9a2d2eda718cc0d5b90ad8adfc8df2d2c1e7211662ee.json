{"ast":null,"code":"var _jsxFileName = \"/Users/laurenblocker/Desktop/Spring 2025/DIG 4639/react-application/src/components/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar(_ref) {\n  _s();\n  let {\n    initialMenuItems\n  } = _ref;\n  // State hooks\n  let [newMenuItem, setNewMenuItem] = useState(\"\"); // Tracks new menu item text\n  let [menuItems, setMenuItems] = useState(initialMenuItems); // Tracks current menu items\n  let [filter, setFilter] = useState(\"\"); // Tracks filter input\n\n  // Add new menu item to the list\n  let addMenuItem = useCallback(() => {\n    // Check if the input is not empty\n    if (newMenuItem.trim() !== \"\") {\n      // Add the new menu item at the top of the list\n      setMenuItems([newMenuItem, ...menuItems]);\n      setNewMenuItem(\"\"); // Clear the input field after adding the item\n    }\n  }, [newMenuItem, menuItems]); // Dependencies\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value) // Update the value as the user types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value) // Update filter value\n      ,\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: menuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"/oaa6lp+ngPTBrV4SYZja6S1wK0=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","Sidebar","initialMenuItems","newMenuItem","setNewMenuItem","menuItems","setMenuItems","filter","setFilter","addMenuItem","trim","event","target","value","map","item","index"],"sources":["/Users/laurenblocker/Desktop/Spring 2025/DIG 4639/react-application/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\"\n\nexport default function Sidebar({ initialMenuItems }) {\n  // State hooks\n  let [newMenuItem, setNewMenuItem] = useState(\"\") // Tracks new menu item text\n  let [menuItems, setMenuItems] = useState(initialMenuItems) // Tracks current menu items\n  let [filter, setFilter] = useState(\"\") // Tracks filter input\n\n  // Add new menu item to the list\n  let addMenuItem = useCallback(() => {\n    // Check if the input is not empty\n    if (newMenuItem.trim() !== \"\") {\n      // Add the new menu item at the top of the list\n      setMenuItems([newMenuItem, ...menuItems])\n      setNewMenuItem(\"\") // Clear the input field after adding the item\n    }\n  }, [newMenuItem, menuItems]) // Dependencies\n\n  // Render the component\n  return (\n    <div>\n      {/* Input field to enter new menu item */}\n      <input\n        type=\"text\"\n        id=\"newMenuItemValue\"\n        value={newMenuItem}\n        onChange={(event) => setNewMenuItem(event.target.value)} // Update the value as the user types\n      />\n      <br />\n\n      {/* Button to add the new item */}\n      <button onClick={addMenuItem}>\n        Add Item\n      </button>\n      <br />\n\n      {/* Input field to filter the menu */}\n      <input\n        id=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)} // Update filter value\n        placeholder=\"Filter by...\"\n      />\n      <br />\n\n      {/* Render the list of menu items */}\n      <ul>\n        {menuItems.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAA;AAE7C,eAAe,SAASC,OAAO,OAAuB;EAAA;EAAA,IAAtB;IAAEC;EAAiB,CAAC;EAClD;EACA,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,EAAC;EACjD,IAAI,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAACG,gBAAgB,CAAC,EAAC;EAC3D,IAAI,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,EAAC;;EAEvC;EACA,IAAIU,WAAW,GAAGT,WAAW,CAAC,MAAM;IAClC;IACA,IAAIG,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7B;MACAJ,YAAY,CAAC,CAACH,WAAW,EAAE,GAAGE,SAAS,CAAC,CAAC;MACzCD,cAAc,CAAC,EAAE,CAAC,EAAC;IACrB;EACF,CAAC,EAAE,CAACD,WAAW,EAAEE,SAAS,CAAC,CAAC,EAAC;;EAE7B;EACA,oBACE;IAAA,wBAEE;MACE,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,kBAAkB;MACrB,KAAK,EAAEF,WAAY;MACnB,QAAQ,EAAGQ,KAAK,IAAKP,cAAc,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eAGN;MAAQ,OAAO,EAAEJ,WAAY;MAAA,UAAC;IAE9B;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eAGN;MACE,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,MAAM;MACX,KAAK,EAAEF,MAAO;MACd,QAAQ,EAAGI,KAAK,IAAKH,SAAS,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE,CAAC;MAAA;MACpD,WAAW,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAC1B,eACF;MAAA;MAAA;MAAA;IAAA,QAAM,eAGN;MAAA,UACGR,SAAS,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzB;QAAA,UAAiBD;MAAI,GAAZC,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GApDuBf,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}